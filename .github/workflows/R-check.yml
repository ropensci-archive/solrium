on: push

name: R-check

jobs:
  R-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) (${{ matrix.config.solr_ver }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: ubuntu-16.04, r: 'latest', solr_ver: '8.7.0', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        # - { os: ubuntu-16.04, r: 'latest', solr_ver: '7.0', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        # - { os: ubuntu-16.04, r: 'latest', solr_ver: '6.0', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        # - { os: ubuntu-16.04, r: 'latest', solr_ver: '5.4.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      SOLR_VER: ${{ matrix.config.solr_ver }}

    steps:
      - uses: actions/checkout@v2

      - name: Spin up Solr
        run: docker-compose up -d

      # - name: Verify Solr is up
      #   run: |
      #     curl -fsSL --retry 5 --retry-max-time 40 --connect-timeout 10 http://localhost:8983/solr/gettingstarted/admin/ping/ 

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}

      - name: Install pak
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
        shell: Rscript {0}

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(pak::local_system_requirements("ubuntu", "16.04"))')

      - name: Install dependencies
        run: |
          pak::local_install_dev_deps()
          pak::pkg_install("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
          CI_ES_PORT: ${{ job.services.solr.ports[8983] }}
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'test-all.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-r${{ matrix.config.solr_ver }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-16.04' && matrix.config.r == 'latest' && matrix.config.solr_ver == '8.7.0'
        run: |
          Rscript -e 'install.packages("covr")' -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
